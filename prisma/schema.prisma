// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  name             String            @db.VarChar(255)
  email            String            @unique @db.VarChar(255)
  passwordId       String            @unique
  password         Password          @relation(fields: [passwordId], references: [id])
  isSupervisor     Boolean           @default(false)
  departments      UserDepartment[]
  vacationRequests VacationRequest[] @relation("requestingUser")
  approvedRequests VacationRequest[] @relation("approvedByUser")
  auth Auth?

  createdAt DateTime @default(now())
}

model Password {
  id       String @id @default(uuid())
  password String @db.VarChar(255)
  user     User?

  createdAt DateTime @default(now())
}

model Department {
  id    String           @id @default(uuid())
  name  String           @db.VarChar(255)
  users UserDepartment[]

  createdAt DateTime @default(now())
}

model UserDepartment {
  user         User       @relation(fields: [userId], references: [id])
  userId       String 
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String 

  @@id([userId, departmentId])
}

model VacationRequest {
  id               String   @id @default(uuid())
  DateFrom         DateTime @db.Date
  DateUntil        DateTime @db.Date
  isApproved       Boolean  @default(false)
  requestingUserId String
  requestingUser   User     @relation(fields: [requestingUserId], references: [id], name: "requestingUser")
  approvedByUserId String?
  approvedByUser   User?    @relation(fields: [approvedByUserId], references: [id], name: "approvedByUser")

  createdAt DateTime @default(now())
}

model Auth {
  id String @id @default(uuid())
  token String @default(cuid())
  refreshToken String @default(cuid())
  userid String @unique
  duration DateTime
  user User @relation(fields: [userid] , references: [id])
}
